/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5 */

#ifndef PB_TRF_MSG_TRF_MSG_PB_H_INCLUDED
#define PB_TRF_MSG_TRF_MSG_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _trf_msg_ClientCap { 
    pb_callback_t tex_fmt; 
    pb_callback_t transports; 
} trf_msg_ClientCap;

typedef struct _trf_msg_ServerAckReq { 
    pb_callback_t display_ids; 
} trf_msg_ServerAckReq;

typedef struct _trf_msg_ServerCap { 
    pb_callback_t display; 
    pb_callback_t xc_fmt; 
    pb_callback_t transports; 
} trf_msg_ServerCap;

typedef struct _trf_msg_Transport { 
    pb_callback_t name; 
    pb_callback_t route; 
} trf_msg_Transport;

typedef struct _trf_msg_ClientDisconnect { 
    bool dummy; 
} trf_msg_ClientDisconnect;

typedef struct _trf_msg_ClientFrameReq { 
    uint32_t id; 
    uint32_t frame_cntr; 
    uint64_t addr; 
    uint64_t rkey; 
} trf_msg_ClientFrameReq;

typedef struct _trf_msg_ClientHello { 
    uint32_t api_major; 
    uint32_t api_minor; 
    uint32_t api_patch; 
} trf_msg_ClientHello;

typedef struct _trf_msg_ClientReq { 
    pb_callback_t display; 
    bool has_transport;
    trf_msg_Transport transport; 
} trf_msg_ClientReq;

typedef struct _trf_msg_Display { 
    uint32_t id; 
    pb_callback_t name; 
    uint32_t width; 
    uint32_t height; 
    pb_callback_t tex_fmt; 
    uint32_t x_offset; 
    uint32_t y_offset; 
} trf_msg_Display;

typedef struct _trf_msg_DisplayReq { 
    uint32_t id; 
    uint32_t width; 
    uint32_t height; 
    uint32_t tex_fmt; 
} trf_msg_DisplayReq;

typedef struct _trf_msg_ServerAckFrameReq { 
    uint32_t id; 
    uint32_t frame_cntr; 
} trf_msg_ServerAckFrameReq;

typedef struct _trf_msg_ServerHello { 
    uint64_t new_session_id; 
} trf_msg_ServerHello;

typedef struct _trf_msg_MessageWrapper { 
    uint64_t session_id; 
    pb_size_t which_payload;
    union {
        trf_msg_ClientHello client_hello;
        trf_msg_ServerHello server_hello;
        trf_msg_ClientCap client_cap;
        trf_msg_ServerCap server_cap;
        trf_msg_ClientReq client_req;
        trf_msg_ServerAckReq server_ack;
        trf_msg_ClientFrameReq client_frame;
        trf_msg_ServerAckFrameReq server_ack_frame;
        trf_msg_ClientDisconnect client_disconnect;
    } payload; 
} trf_msg_MessageWrapper;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define trf_msg_Transport_init_default           {{{NULL}, NULL}, {{NULL}, NULL}}
#define trf_msg_Display_init_default             {0, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, 0}
#define trf_msg_DisplayReq_init_default          {0, 0, 0, 0}
#define trf_msg_ClientHello_init_default         {0, 0, 0}
#define trf_msg_ServerHello_init_default         {0}
#define trf_msg_ClientCap_init_default           {{{NULL}, NULL}, {{NULL}, NULL}}
#define trf_msg_ServerCap_init_default           {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define trf_msg_ClientReq_init_default           {{{NULL}, NULL}, false, trf_msg_Transport_init_default}
#define trf_msg_ServerAckReq_init_default        {{{NULL}, NULL}}
#define trf_msg_ClientFrameReq_init_default      {0, 0, 0, 0}
#define trf_msg_ServerAckFrameReq_init_default   {0, 0}
#define trf_msg_ClientDisconnect_init_default    {0}
#define trf_msg_MessageWrapper_init_default      {0, 0, {trf_msg_ClientHello_init_default}}
#define trf_msg_Transport_init_zero              {{{NULL}, NULL}, {{NULL}, NULL}}
#define trf_msg_Display_init_zero                {0, {{NULL}, NULL}, 0, 0, {{NULL}, NULL}, 0, 0}
#define trf_msg_DisplayReq_init_zero             {0, 0, 0, 0}
#define trf_msg_ClientHello_init_zero            {0, 0, 0}
#define trf_msg_ServerHello_init_zero            {0}
#define trf_msg_ClientCap_init_zero              {{{NULL}, NULL}, {{NULL}, NULL}}
#define trf_msg_ServerCap_init_zero              {{{NULL}, NULL}, {{NULL}, NULL}, {{NULL}, NULL}}
#define trf_msg_ClientReq_init_zero              {{{NULL}, NULL}, false, trf_msg_Transport_init_zero}
#define trf_msg_ServerAckReq_init_zero           {{{NULL}, NULL}}
#define trf_msg_ClientFrameReq_init_zero         {0, 0, 0, 0}
#define trf_msg_ServerAckFrameReq_init_zero      {0, 0}
#define trf_msg_ClientDisconnect_init_zero       {0}
#define trf_msg_MessageWrapper_init_zero         {0, 0, {trf_msg_ClientHello_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define trf_msg_ClientCap_tex_fmt_tag            1
#define trf_msg_ClientCap_transports_tag         2
#define trf_msg_ServerAckReq_display_ids_tag     1
#define trf_msg_ServerCap_display_tag            1
#define trf_msg_ServerCap_xc_fmt_tag             2
#define trf_msg_ServerCap_transports_tag         3
#define trf_msg_Transport_name_tag               1
#define trf_msg_Transport_route_tag              2
#define trf_msg_ClientDisconnect_dummy_tag       1
#define trf_msg_ClientFrameReq_id_tag            1
#define trf_msg_ClientFrameReq_frame_cntr_tag    2
#define trf_msg_ClientFrameReq_addr_tag          3
#define trf_msg_ClientFrameReq_rkey_tag          4
#define trf_msg_ClientHello_api_major_tag        1
#define trf_msg_ClientHello_api_minor_tag        2
#define trf_msg_ClientHello_api_patch_tag        3
#define trf_msg_ClientReq_display_tag            1
#define trf_msg_ClientReq_transport_tag          2
#define trf_msg_Display_id_tag                   1
#define trf_msg_Display_name_tag                 2
#define trf_msg_Display_width_tag                3
#define trf_msg_Display_height_tag               4
#define trf_msg_Display_tex_fmt_tag              5
#define trf_msg_Display_x_offset_tag             6
#define trf_msg_Display_y_offset_tag             7
#define trf_msg_DisplayReq_id_tag                1
#define trf_msg_DisplayReq_width_tag             2
#define trf_msg_DisplayReq_height_tag            3
#define trf_msg_DisplayReq_tex_fmt_tag           4
#define trf_msg_ServerAckFrameReq_id_tag         1
#define trf_msg_ServerAckFrameReq_frame_cntr_tag 2
#define trf_msg_ServerHello_new_session_id_tag   1
#define trf_msg_MessageWrapper_session_id_tag    1
#define trf_msg_MessageWrapper_client_hello_tag  2
#define trf_msg_MessageWrapper_server_hello_tag  3
#define trf_msg_MessageWrapper_client_cap_tag    4
#define trf_msg_MessageWrapper_server_cap_tag    5
#define trf_msg_MessageWrapper_client_req_tag    6
#define trf_msg_MessageWrapper_server_ack_tag    7
#define trf_msg_MessageWrapper_client_frame_tag  8
#define trf_msg_MessageWrapper_server_ack_frame_tag 9
#define trf_msg_MessageWrapper_client_disconnect_tag 10

/* Struct field encoding specification for nanopb */
#define trf_msg_Transport_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   name,              1) \
X(a, CALLBACK, SINGULAR, STRING,   route,             2)
#define trf_msg_Transport_CALLBACK pb_default_field_callback
#define trf_msg_Transport_DEFAULT NULL

#define trf_msg_Display_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, CALLBACK, SINGULAR, STRING,   name,              2) \
X(a, STATIC,   SINGULAR, UINT32,   width,             3) \
X(a, STATIC,   SINGULAR, UINT32,   height,            4) \
X(a, CALLBACK, REPEATED, UINT32,   tex_fmt,           5) \
X(a, STATIC,   SINGULAR, UINT32,   x_offset,          6) \
X(a, STATIC,   SINGULAR, UINT32,   y_offset,          7)
#define trf_msg_Display_CALLBACK pb_default_field_callback
#define trf_msg_Display_DEFAULT NULL

#define trf_msg_DisplayReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, STATIC,   SINGULAR, UINT32,   width,             2) \
X(a, STATIC,   SINGULAR, UINT32,   height,            3) \
X(a, STATIC,   SINGULAR, UINT32,   tex_fmt,           4)
#define trf_msg_DisplayReq_CALLBACK NULL
#define trf_msg_DisplayReq_DEFAULT NULL

#define trf_msg_ClientHello_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   api_major,         1) \
X(a, STATIC,   SINGULAR, UINT32,   api_minor,         2) \
X(a, STATIC,   SINGULAR, UINT32,   api_patch,         3)
#define trf_msg_ClientHello_CALLBACK NULL
#define trf_msg_ClientHello_DEFAULT NULL

#define trf_msg_ServerHello_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   new_session_id,    1)
#define trf_msg_ServerHello_CALLBACK NULL
#define trf_msg_ServerHello_DEFAULT NULL

#define trf_msg_ClientCap_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UINT32,   tex_fmt,           1) \
X(a, CALLBACK, REPEATED, MESSAGE,  transports,        2)
#define trf_msg_ClientCap_CALLBACK pb_default_field_callback
#define trf_msg_ClientCap_DEFAULT NULL
#define trf_msg_ClientCap_transports_MSGTYPE trf_msg_Transport

#define trf_msg_ServerCap_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  display,           1) \
X(a, CALLBACK, REPEATED, UINT32,   xc_fmt,            2) \
X(a, CALLBACK, REPEATED, MESSAGE,  transports,        3)
#define trf_msg_ServerCap_CALLBACK pb_default_field_callback
#define trf_msg_ServerCap_DEFAULT NULL
#define trf_msg_ServerCap_display_MSGTYPE trf_msg_Display
#define trf_msg_ServerCap_transports_MSGTYPE trf_msg_Transport

#define trf_msg_ClientReq_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, MESSAGE,  display,           1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  transport,         2)
#define trf_msg_ClientReq_CALLBACK pb_default_field_callback
#define trf_msg_ClientReq_DEFAULT NULL
#define trf_msg_ClientReq_display_MSGTYPE trf_msg_DisplayReq
#define trf_msg_ClientReq_transport_MSGTYPE trf_msg_Transport

#define trf_msg_ServerAckReq_FIELDLIST(X, a) \
X(a, CALLBACK, REPEATED, UINT32,   display_ids,       1)
#define trf_msg_ServerAckReq_CALLBACK pb_default_field_callback
#define trf_msg_ServerAckReq_DEFAULT NULL

#define trf_msg_ClientFrameReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, STATIC,   SINGULAR, UINT32,   frame_cntr,        2) \
X(a, STATIC,   SINGULAR, UINT64,   addr,              3) \
X(a, STATIC,   SINGULAR, UINT64,   rkey,              4)
#define trf_msg_ClientFrameReq_CALLBACK NULL
#define trf_msg_ClientFrameReq_DEFAULT NULL

#define trf_msg_ServerAckFrameReq_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   id,                1) \
X(a, STATIC,   SINGULAR, UINT32,   frame_cntr,        2)
#define trf_msg_ServerAckFrameReq_CALLBACK NULL
#define trf_msg_ServerAckFrameReq_DEFAULT NULL

#define trf_msg_ClientDisconnect_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     dummy,             1)
#define trf_msg_ClientDisconnect_CALLBACK NULL
#define trf_msg_ClientDisconnect_DEFAULT NULL

#define trf_msg_MessageWrapper_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT64,   session_id,        1) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,client_hello,payload.client_hello),   2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,server_hello,payload.server_hello),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,client_cap,payload.client_cap),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,server_cap,payload.server_cap),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,client_req,payload.client_req),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,server_ack,payload.server_ack),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,client_frame,payload.client_frame),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,server_ack_frame,payload.server_ack_frame),   9) \
X(a, STATIC,   ONEOF,    MESSAGE,  (payload,client_disconnect,payload.client_disconnect),  10)
#define trf_msg_MessageWrapper_CALLBACK NULL
#define trf_msg_MessageWrapper_DEFAULT NULL
#define trf_msg_MessageWrapper_payload_client_hello_MSGTYPE trf_msg_ClientHello
#define trf_msg_MessageWrapper_payload_server_hello_MSGTYPE trf_msg_ServerHello
#define trf_msg_MessageWrapper_payload_client_cap_MSGTYPE trf_msg_ClientCap
#define trf_msg_MessageWrapper_payload_server_cap_MSGTYPE trf_msg_ServerCap
#define trf_msg_MessageWrapper_payload_client_req_MSGTYPE trf_msg_ClientReq
#define trf_msg_MessageWrapper_payload_server_ack_MSGTYPE trf_msg_ServerAckReq
#define trf_msg_MessageWrapper_payload_client_frame_MSGTYPE trf_msg_ClientFrameReq
#define trf_msg_MessageWrapper_payload_server_ack_frame_MSGTYPE trf_msg_ServerAckFrameReq
#define trf_msg_MessageWrapper_payload_client_disconnect_MSGTYPE trf_msg_ClientDisconnect

extern const pb_msgdesc_t trf_msg_Transport_msg;
extern const pb_msgdesc_t trf_msg_Display_msg;
extern const pb_msgdesc_t trf_msg_DisplayReq_msg;
extern const pb_msgdesc_t trf_msg_ClientHello_msg;
extern const pb_msgdesc_t trf_msg_ServerHello_msg;
extern const pb_msgdesc_t trf_msg_ClientCap_msg;
extern const pb_msgdesc_t trf_msg_ServerCap_msg;
extern const pb_msgdesc_t trf_msg_ClientReq_msg;
extern const pb_msgdesc_t trf_msg_ServerAckReq_msg;
extern const pb_msgdesc_t trf_msg_ClientFrameReq_msg;
extern const pb_msgdesc_t trf_msg_ServerAckFrameReq_msg;
extern const pb_msgdesc_t trf_msg_ClientDisconnect_msg;
extern const pb_msgdesc_t trf_msg_MessageWrapper_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define trf_msg_Transport_fields &trf_msg_Transport_msg
#define trf_msg_Display_fields &trf_msg_Display_msg
#define trf_msg_DisplayReq_fields &trf_msg_DisplayReq_msg
#define trf_msg_ClientHello_fields &trf_msg_ClientHello_msg
#define trf_msg_ServerHello_fields &trf_msg_ServerHello_msg
#define trf_msg_ClientCap_fields &trf_msg_ClientCap_msg
#define trf_msg_ServerCap_fields &trf_msg_ServerCap_msg
#define trf_msg_ClientReq_fields &trf_msg_ClientReq_msg
#define trf_msg_ServerAckReq_fields &trf_msg_ServerAckReq_msg
#define trf_msg_ClientFrameReq_fields &trf_msg_ClientFrameReq_msg
#define trf_msg_ServerAckFrameReq_fields &trf_msg_ServerAckFrameReq_msg
#define trf_msg_ClientDisconnect_fields &trf_msg_ClientDisconnect_msg
#define trf_msg_MessageWrapper_fields &trf_msg_MessageWrapper_msg

/* Maximum encoded size of messages (where known) */
/* trf_msg_Transport_size depends on runtime parameters */
/* trf_msg_Display_size depends on runtime parameters */
/* trf_msg_ClientCap_size depends on runtime parameters */
/* trf_msg_ServerCap_size depends on runtime parameters */
/* trf_msg_ClientReq_size depends on runtime parameters */
/* trf_msg_ServerAckReq_size depends on runtime parameters */
/* trf_msg_MessageWrapper_size depends on runtime parameters */
#define trf_msg_ClientDisconnect_size            2
#define trf_msg_ClientFrameReq_size              34
#define trf_msg_ClientHello_size                 18
#define trf_msg_DisplayReq_size                  24
#define trf_msg_ServerAckFrameReq_size           12
#define trf_msg_ServerHello_size                 11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
